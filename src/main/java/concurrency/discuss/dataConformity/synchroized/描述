锁的类型：独占式 悲观锁 可重入锁 互斥
锁的生成方式：实例对象锁 Class锁
锁的级别：jvm级别
锁的范围：对象 方法 代码块
        1.作用于成员变量和非静态方法时，锁住对象实例this
        2.作用于静态方法（本身属于Class而不是对象）时，一般锁住的是Class对象
        3.作用于代码块时，锁住的是代码块中配置的对象。
特点：被修饰的对象同一时刻只允许一个线程来访问，其他线程只能等当前访问线程执行结束并且释放锁资源后才能访问。
     同步阻塞，悲观并发；
锁的本质：每个对象都有一个monitor对象，锁的竞争主要是针对monitor对象

synchronized原理：
    工作流程：
        0.自旋状态：synchronized收到新的锁请求，首先进入自旋。
        1.锁竞争队列：ContentionList  :将自旋后未获取到锁资源的所有请求锁的线程放入队列
        2.竞争候选队列：EntryList     : 存放从锁竞争队列中选取有资格的线程
        3.等待集合：WaitSet          :  存放调用wait()方法后被阻塞的线程
        4.竞争候选者：OnDeck         : 同一时间只有一个线程在竞争锁时则为候选者状态
        5.竞争成功状态：Owner         : 竞争到锁资源的线程
        6.释放锁：!Owner             : 释放锁资源后的线性